################################################################################
Шаблонизатор для страниц и приложений
################################################################################

********************************************************************************
Общие сведения
********************************************************************************

Для  создания шаблонов  страниц и написания приложений используется специализированный интерпретируемый язык, который предоставляет возможность формировать требуемую HTML-страницу.

При этом непосредственно  шаблоны могут включать вызовы следующих видов:

1) FuncName()

2) FuncName{}

Вне зависимости от используемого вида, производится  вызов требуемой функции языка GO, однако в первом случае параметры передаются в функцию как массив строк, а во втором -- как ассоциативный массив с парами ключ-значение. При этом передаваемые параметры можно не заключать в кавычки, но если какой-либо параметр содержит запятую или закрывающую скобку, то следует заключить значение данного параметра  в двойные или обратные кавычки ("значение" или `значение`, соответственно).


Например,

.. code:: js

      FuncName( строка 1, строка 2, “строка, включающая запятую”)

.. code:: js

      FuncName{ string1: строка 1, string2: строка 2, string3: “строка, которая с запятой” }

*Обратите внимание, функции могут дополняться разработчиком системы новыми параметрами без предварительного уведомления пользователей.*

********************************************************************************
Список функций
********************************************************************************
 **Функция AppNav**

Возвращает ссылку на приложение с указанным именем

**Синтаксис:**

.. code:: js

AppNav(appname, [text])

**Параметры:**

*appname*

Наименование приложения, на которое требуется получить ссылку

*text*

Тест возвращаемой ссылки (необязательный параметр)

**Возвращаемые значения:**

Ссылка на приложение в формате ?.

**Примечания:**

Если параметр text не указан, то текст ссылки скопирован с параметра appname.



**Функция BtnEdit**

Создает элемент управления "Кнопка (шестеренка)"

**Синтаксис:**

.. code:: js

BtnEdit(page, id)

**Параметры:**

*page*

Активная ссылка на создаваемом элементе управления

*id*

Передаваемый параметр при активации созданного элемента управления

**Возвращаемые значения:**

?

**Примечания:**

Данная функция применяется в таблицах для формирования ссылок на операцию редактирования элементов.

**Функция BtnTemplate**

Создает элемент управления "Кнопка (загрузка шаблона)"

**Синтаксис:**

.. code:: js

BtnTemplate(template, text, params)

**Параметры:**

*template*

Активная ссылка на создаваемом элементе управления

*text*

Текст ссылки

*params*

Передаваемые параметры при активации созданного элемента управления (необязательный параметр)

**Возвращаемые значения:**

?

**Функция GetRow**

Возвращает определенную запись из заданной таблицы

**Синтаксис:**

.. code:: js

GetRow(prefix, table, colname, value)

**Параметры:**

*prefix*

Список переменных для записи результата выполнения функции

*table*

Наименование таблицы с запрашиваемой записью

*colname*

Наименование искомого столбца

*value*

Искомое значение

**Возвращаемые значения:**

?

**Примечания:**

Вывод данных при выполнении данной функции отсутствует.

 **Функция Image**

Возвращает тэг изображения

**Синтаксис:**

.. code:: js

Image(src, [alt] )

**Параметры:**

*src*

Ссылка на изображение, тег которого требуется получить

*alt*

Альтернативный текст изображения (необязательный параметр)

**Возвращаемые значения:**

?.

 **Функция Json**

Формирует строку формата JSON из произвольного набора параметров

**Синтаксис:**

.. code:: js

Json(data)

**Параметры:**

*data*

Набора параметров для преобразования в JSON

**Возвращаемые значения:**

Строка формата JSON с набором заданных параметров.

**Функция Navigation**

Возвращает редактируемую панель с заданной навигационной цепочкой и кнопкой Редактировать

**Синтаксис:**

.. code:: js

Navigation(params, ….)

**Параметры:**

*params*

Навигационная цепочка

**Возвращаемые значения:**

Редактируемая панель

**Функция LiTemplate**

Создает элемент управления "Список (загрузка шаблона)"

**Синтаксис:**

.. code:: js

LiTemplate(template, text)

**Параметры:**

*template*

Активная ссылка на создаваемом элементе управления

*text*

Текст ссылки (необязательный параметр)

**Возвращаемые значения:**

?

**Примечания:**

Если параметр text не указан, то текст ссылки будет скопирован с параметра template.

**Функция LinkTemplate**

Создает элемент управления "Ссылка (загрузка шаблона)"

**Синтаксис:**

.. code:: js

LinkTemplate(template, text, params)

**Параметры:**

*template*

Активная ссылка на создаваемом элементе управления

*text*

Текст ссылки

*params*

Передаваемые параметры при активации созданного элемента управления (необязательный параметр)

**Возвращаемые значения:**

?

 **Функция MarkDown**

Преобразует разметку текста из формата Markdown в формат HTML

**Синтаксис:**

.. code:: js

MarkDown(text)

**Параметры:**

*text*

Текст в разметке Markdown

**Возвращаемые значения:**

Текст в разметке HTML


 **Функция PageTitle**

Формирует панель элементов

**Синтаксис:**

.. code:: js

PageTitle(header)

**Параметры:**

*header*

Заголовок создаваемой панели элементов

**Возвращаемые значения:**

?

**Примечания:**

Чтобы корректно закрыть тег DIV, в конце следует добавить вызов функции PageEnd.


 **Функция SetVar**

Присваивает переменным значения

**Синтаксис:**

.. code:: js

SetVar(name=value, ... )

**Параметры:**

*name*

Наименование переменной

*value*

Присваиваемое значение

**Возвращаемые значения:**

?

**Примечания:**

Вывод данных при выполнении данной функции отсутствует. После окончания выполнения функции возможно обращение к переменным в формате #var1, #var2, ...


 **Функция StateValue**

Возвращает значение заданного параметра

**Синтаксис:**

.. code:: js

StateValue(name)

**Параметры:**

*name*

Наименование параметра в таблице state_parameters

**Возвращаемые значения:**

Значение указанного параметра


 **Функция StateValue**

Возвращает значение заданного параметра

**Синтаксис:**

.. code:: js

StateValue(name)

**Параметры:**

*name*

Наименование параметра в таблице state_parameters

**Возвращаемые значения:**

Значение указанного параметра


**Функция SysLink**

Создает элемент управления "Ссылка (загрузка шаблона)"

**Синтаксис:**

.. code:: js

SysLink(page, text, [params])

**Параметры:**

*page*

Активная ссылка на создаваемом элементе управления

*text*

Текст ссылки

*params*

Передаваемые параметры при активации созданного элемента управления (необязательный параметр)

**Возвращаемые значения:**

?


**Функция Table**

Возвращает выборку по заданной таблице по определенным критериям

**Синтаксис:**

.. code:: js

Table(tablename,  order, where, columns)

**Параметры:**

*tablename*

Наименование таблицы для выборки

*order*

Идентификатор колонки для сортировки строк таблицы

*where*

Условие выборки данных

*columns*

Перечень столбцов для отображения

**Возвращаемые значения:**

Выборка по заданных условиям

**Примечания:**

В качестве значения columns допускается указывать #имяколонки#. 


 **Функция Title**

Создает заголовок класса content-heading

**Синтаксис:**

.. code:: js

Title(text)

**Параметры:**

*text*

Текст заголовка

**Возвращаемые значения:**

Заголовок content-heading


**Функция TemplateNav**

Создает элемент управления "Панель навигации (загрузка шаблона)"

**Синтаксис:**

.. code:: js

TemplateNav(template, text, params)

**Параметры:**

*template*

Активная ссылка на создаваемом элементе управления

*text*

Текст ссылки

*params*

Передаваемые параметры при активации созданного элемента управления (необязательный параметр)

**Возвращаемые значения:**

?


 **Функция TextHidden**

Создает скрытые элементы управления Textarea

**Синтаксис:**

.. code:: js

TextHidden(name, ... )

**Параметры:**

*name*

Наименование создаваемого элемента управления

**Возвращаемые значения:**

?

**Примечания:**

В качестве значения автоматически присваивается значение переменной с таким же именем.



 **Функция TxForm**

Возвращает форму указанного контракта

**Синтаксис:**

.. code:: js

TxForm(name)

**Параметры:**

*name*

Наименование возвращаемого контракта

**Возвращаемые значения:**

Контракт с указанным именем



 **Функция TxId**

Возвращается идентификатор указанной транзакции

**Синтаксис:**

.. code:: js

TxId(txname)

**Параметры:**

*txname*

Наименование возвращаемой транзакции

**Возвращаемые значения:**

Идентификатор указанной транзакции
